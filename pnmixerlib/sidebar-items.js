initSidebarItems({"macro":[["create_builder_item",""],["error_dialog","Present a gtk error dialog with given message. Provides only a close button."],["just_warn","Warns on err and yields `()` without returning the function."],["pixbuf_new_from_png","Create a pixbuf from the given PNG file. Includes the file as bytes in the binary and decodes it."],["push_warning","If there is an error in the expression, push it to the given mutable warning vector."],["result_warn","Present a gtk error dialog with the error from the `Result` type, if any. Provides only a close button."],["try_e","Try to unwrap a `Result<T, E>`. If there is a value `T`, yield it, otherwise print an error and exit the program."],["try_r","Try to unwrap a `Result<T, E>`. If there is a value `T`, yield it, otherwise return from the function with the given value."],["try_w","Try to unwrap a `Result<T, E>`. If there is a value `T`, yield it, otherwise print a warning and `return ()` from the function."],["try_wr","Try to unwrap a `Result<T, E>`. If there is a value `T`, yield it, otherwise print a warning and return from the function with the given value."],["unwrap_any","Unwraps a `Result<T, E>` by yielding a value of the samet ype for either case."],["unwrap_error","If there is a value in the Result type, unwrap it, otherwise error-log the error, show it via gtk dialog and exit the whole program."],["wresult_warn","Convert `WResult` to `Result`. All warnings are printed via the `log` crate and are shown via Gtk dialogs."]],"mod":[["app_state","Global application state."],["ui_entry","Global GUI state."]]});